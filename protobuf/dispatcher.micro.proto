syntax = "proto3";

package nodeum.protobuf.dispatcher;

option go_package = "github.com/nodeum-io/nodeum-plugins/protobuf/micro/dispatcherpb";

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "github.com/nodeum-io/nodeum-plugins/protobuf/task.type.proto";

service Dispatcher {
  rpc Start(StartRequest) returns (StartResponse) {
    option (google.api.http) = { post: "/task/start"; body: "*"; };
  }
  rpc Pause(TriggerRequest) returns (TriggerResponse) {
    option (google.api.http) = { post: "/task/pause/{id}"; };
  }
  rpc Resume(TriggerRequest) returns (TriggerResponse) {
    option (google.api.http) = { post: "/task/resume/{id}"; };
  }
  rpc Stop(TriggerRequest) returns (TriggerResponse) {
    option (google.api.http) = { post: "/task/stop/{id}"; };
  }
}

message StartRequest {
  oneof source {
    Task task = 1;
    string task_id = 2;
  }
  google.protobuf.Struct metadata = 3;
}

message StartResponse {
  string msg = 1;
  Execution execution = 2;
}

message TriggerRequest {
  string id = 1;
}

message TriggerResponse {
  string msg = 1;
}
