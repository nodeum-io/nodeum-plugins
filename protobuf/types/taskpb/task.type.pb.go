// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: protobuf/task.type.proto

package taskpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Source_Type int32

const (
	Source_CONTAINER       Source_Type = 0
	Source_PRIMARY_NAS     Source_Type = 1
	Source_SECONDARY_NAS   Source_Type = 2
	Source_PRIMARY_CLOUD   Source_Type = 3
	Source_SECONDARY_CLOUD Source_Type = 4
	Source_PRIMARY_TAPE    Source_Type = 5
	Source_SECONDARY_TAPE  Source_Type = 6
)

// Enum value maps for Source_Type.
var (
	Source_Type_name = map[int32]string{
		0: "CONTAINER",
		1: "PRIMARY_NAS",
		2: "SECONDARY_NAS",
		3: "PRIMARY_CLOUD",
		4: "SECONDARY_CLOUD",
		5: "PRIMARY_TAPE",
		6: "SECONDARY_TAPE",
	}
	Source_Type_value = map[string]int32{
		"CONTAINER":       0,
		"PRIMARY_NAS":     1,
		"SECONDARY_NAS":   2,
		"PRIMARY_CLOUD":   3,
		"SECONDARY_CLOUD": 4,
		"PRIMARY_TAPE":    5,
		"SECONDARY_TAPE":  6,
	}
)

func (x Source_Type) Enum() *Source_Type {
	p := new(Source_Type)
	*p = x
	return p
}

func (x Source_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Source_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_task_type_proto_enumTypes[0].Descriptor()
}

func (Source_Type) Type() protoreflect.EnumType {
	return &file_protobuf_task_type_proto_enumTypes[0]
}

func (x Source_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Source_Type.Descriptor instead.
func (Source_Type) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_task_type_proto_rawDescGZIP(), []int{0, 0}
}

type Task_Type int32

const (
	Task_ACTIVE_ARCHIVE  Task_Type = 0
	Task_OFFLINE_ARCHIVE Task_Type = 1
	Task_DATA_EXCHANGE   Task_Type = 2
	Task_DATA_MIGRATION  Task_Type = 5
)

// Enum value maps for Task_Type.
var (
	Task_Type_name = map[int32]string{
		0: "ACTIVE_ARCHIVE",
		1: "OFFLINE_ARCHIVE",
		2: "DATA_EXCHANGE",
		5: "DATA_MIGRATION",
	}
	Task_Type_value = map[string]int32{
		"ACTIVE_ARCHIVE":  0,
		"OFFLINE_ARCHIVE": 1,
		"DATA_EXCHANGE":   2,
		"DATA_MIGRATION":  5,
	}
)

func (x Task_Type) Enum() *Task_Type {
	p := new(Task_Type)
	*p = x
	return p
}

func (x Task_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Task_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_task_type_proto_enumTypes[1].Descriptor()
}

func (Task_Type) Type() protoreflect.EnumType {
	return &file_protobuf_task_type_proto_enumTypes[1]
}

func (x Task_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Task_Type.Descriptor instead.
func (Task_Type) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_task_type_proto_rawDescGZIP(), []int{1, 0}
}

type Task_Action int32

const (
	Task_COPY Task_Action = 0
	Task_MOVE Task_Action = 1
)

// Enum value maps for Task_Action.
var (
	Task_Action_name = map[int32]string{
		0: "COPY",
		1: "MOVE",
	}
	Task_Action_value = map[string]int32{
		"COPY": 0,
		"MOVE": 1,
	}
)

func (x Task_Action) Enum() *Task_Action {
	p := new(Task_Action)
	*p = x
	return p
}

func (x Task_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Task_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_task_type_proto_enumTypes[2].Descriptor()
}

func (Task_Action) Type() protoreflect.EnumType {
	return &file_protobuf_task_type_proto_enumTypes[2]
}

func (x Task_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Task_Action.Descriptor instead.
func (Task_Action) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_task_type_proto_rawDescGZIP(), []int{1, 1}
}

type Execution_Progress int32

const (
	Execution_UNSET           Execution_Progress = 0
	Execution_INIT_STARTED    Execution_Progress = 1
	Execution_INIT_DONE       Execution_Progress = 2
	Execution_PROCESS_STARTED Execution_Progress = 4
	Execution_PROCESS_DONE    Execution_Progress = 8
	Execution_FINAL_STARTED   Execution_Progress = 16
	Execution_FINAL_DONE      Execution_Progress = 32
	Execution_HAS_ERROR       Execution_Progress = 64
	Execution_STOPPED         Execution_Progress = 128
	Execution_STOPPED_BY_USER Execution_Progress = 256
	Execution_PAUSED          Execution_Progress = 512
)

// Enum value maps for Execution_Progress.
var (
	Execution_Progress_name = map[int32]string{
		0:   "UNSET",
		1:   "INIT_STARTED",
		2:   "INIT_DONE",
		4:   "PROCESS_STARTED",
		8:   "PROCESS_DONE",
		16:  "FINAL_STARTED",
		32:  "FINAL_DONE",
		64:  "HAS_ERROR",
		128: "STOPPED",
		256: "STOPPED_BY_USER",
		512: "PAUSED",
	}
	Execution_Progress_value = map[string]int32{
		"UNSET":           0,
		"INIT_STARTED":    1,
		"INIT_DONE":       2,
		"PROCESS_STARTED": 4,
		"PROCESS_DONE":    8,
		"FINAL_STARTED":   16,
		"FINAL_DONE":      32,
		"HAS_ERROR":       64,
		"STOPPED":         128,
		"STOPPED_BY_USER": 256,
		"PAUSED":          512,
	}
)

func (x Execution_Progress) Enum() *Execution_Progress {
	p := new(Execution_Progress)
	*p = x
	return p
}

func (x Execution_Progress) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Execution_Progress) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_task_type_proto_enumTypes[3].Descriptor()
}

func (Execution_Progress) Type() protoreflect.EnumType {
	return &file_protobuf_task_type_proto_enumTypes[3]
}

func (x Execution_Progress) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Execution_Progress.Descriptor instead.
func (Execution_Progress) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_task_type_proto_rawDescGZIP(), []int{2, 0}
}

type Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            Source_Type `protobuf:"varint,1,opt,name=type,proto3,enum=nodeum.protobuf.Source_Type" json:"type,omitempty"`
	NodePaths       []string    `protobuf:"bytes,2,rep,name=node_paths,proto3" json:"node_paths,omitempty"`
	NodeIds         []string    `protobuf:"bytes,3,rep,name=node_ids,proto3" json:"node_ids,omitempty"`
	PoolId          uint64      `protobuf:"varint,4,opt,name=pool_id,proto3" json:"pool_id,omitempty"`
	StorageId       uint64      `protobuf:"varint,5,opt,name=storage_id,proto3" json:"storage_id,omitempty"`
	ParentStorageId uint64      `protobuf:"varint,16,opt,name=parent_storage_id,proto3" json:"parent_storage_id,omitempty"`
	StorageName     string      `protobuf:"bytes,17,opt,name=storage_name,proto3" json:"storage_name,omitempty"`
}

func (x *Source) Reset() {
	*x = Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_task_type_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_task_type_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_protobuf_task_type_proto_rawDescGZIP(), []int{0}
}

func (x *Source) GetType() Source_Type {
	if x != nil {
		return x.Type
	}
	return Source_CONTAINER
}

func (x *Source) GetNodePaths() []string {
	if x != nil {
		return x.NodePaths
	}
	return nil
}

func (x *Source) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

func (x *Source) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *Source) GetStorageId() uint64 {
	if x != nil {
		return x.StorageId
	}
	return 0
}

func (x *Source) GetParentStorageId() uint64 {
	if x != nil {
		return x.ParentStorageId
	}
	return 0
}

func (x *Source) GetStorageName() string {
	if x != nil {
		return x.StorageName
	}
	return ""
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          Task_Type        `protobuf:"varint,3,opt,name=type,proto3,enum=nodeum.protobuf.Task_Type" json:"type,omitempty"`
	Action        Task_Action      `protobuf:"varint,4,opt,name=action,proto3,enum=nodeum.protobuf.Task_Action" json:"action,omitempty"`
	Sources       []*Source        `protobuf:"bytes,5,rep,name=sources,proto3" json:"sources,omitempty"`
	Destinations  []*Source        `protobuf:"bytes,6,rep,name=destinations,proto3" json:"destinations,omitempty"`
	Options       *structpb.Struct `protobuf:"bytes,7,opt,name=options,proto3" json:"options,omitempty"`
	Metadata      *structpb.Struct `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`
	LastExecution *Execution       `protobuf:"bytes,15,opt,name=last_execution,proto3" json:"last_execution,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_task_type_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_task_type_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_protobuf_task_type_proto_rawDescGZIP(), []int{1}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task) GetType() Task_Type {
	if x != nil {
		return x.Type
	}
	return Task_ACTIVE_ARCHIVE
}

func (x *Task) GetAction() Task_Action {
	if x != nil {
		return x.Action
	}
	return Task_COPY
}

func (x *Task) GetSources() []*Source {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *Task) GetDestinations() []*Source {
	if x != nil {
		return x.Destinations
	}
	return nil
}

func (x *Task) GetOptions() *structpb.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Task) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Task) GetLastExecution() *Execution {
	if x != nil {
		return x.LastExecution
	}
	return nil
}

type Execution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Task       *Task                  `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	Metadata   *structpb.Struct       `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Progress   uint32                 `protobuf:"varint,4,opt,name=progress,proto3" json:"progress,omitempty"`
	SizeDone   int64                  `protobuf:"varint,5,opt,name=size_done,proto3" json:"size_done,omitempty"`
	SizeTodo   int64                  `protobuf:"varint,6,opt,name=size_todo,proto3" json:"size_todo,omitempty"`
	NodesDone  int32                  `protobuf:"varint,7,opt,name=nodes_done,proto3" json:"nodes_done,omitempty"`
	NodesTodo  int32                  `protobuf:"varint,8,opt,name=nodes_todo,proto3" json:"nodes_todo,omitempty"`
	FinishedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=finished_at,proto3" json:"finished_at,omitempty"`
}

func (x *Execution) Reset() {
	*x = Execution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_task_type_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Execution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Execution) ProtoMessage() {}

func (x *Execution) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_task_type_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Execution.ProtoReflect.Descriptor instead.
func (*Execution) Descriptor() ([]byte, []int) {
	return file_protobuf_task_type_proto_rawDescGZIP(), []int{2}
}

func (x *Execution) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Execution) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *Execution) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Execution) GetProgress() uint32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *Execution) GetSizeDone() int64 {
	if x != nil {
		return x.SizeDone
	}
	return 0
}

func (x *Execution) GetSizeTodo() int64 {
	if x != nil {
		return x.SizeTodo
	}
	return 0
}

func (x *Execution) GetNodesDone() int32 {
	if x != nil {
		return x.NodesDone
	}
	return 0
}

func (x *Execution) GetNodesTodo() int32 {
	if x != nil {
		return x.NodesTodo
	}
	return 0
}

func (x *Execution) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

var File_protobuf_task_type_proto protoreflect.FileDescriptor

var file_protobuf_task_type_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6e, 0x6f, 0x64, 0x65,
	0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x03, 0x0a, 0x06, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x2c, 0x0a,
	0x11, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x87, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x54,
	0x41, 0x49, 0x4e, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x52, 0x49, 0x4d, 0x41,
	0x52, 0x59, 0x5f, 0x4e, 0x41, 0x53, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x45, 0x43, 0x4f,
	0x4e, 0x44, 0x41, 0x52, 0x59, 0x5f, 0x4e, 0x41, 0x53, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x50,
	0x52, 0x49, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x10, 0x03, 0x12, 0x13,
	0x0a, 0x0f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x41, 0x52, 0x59, 0x5f, 0x43, 0x4c, 0x4f, 0x55,
	0x44, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x49, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x54,
	0x41, 0x50, 0x45, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x41,
	0x52, 0x59, 0x5f, 0x54, 0x41, 0x50, 0x45, 0x10, 0x06, 0x22, 0xa2, 0x04, 0x0a, 0x04, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x07,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x3b, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x42, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e,
	0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x0e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49,
	0x56, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x5f,
	0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x4d, 0x49, 0x47, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05,
	0x22, 0x1c, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x4f,
	0x50, 0x59, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x01, 0x22, 0x94,
	0x04, 0x0a, 0x09, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x04,
	0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x6f, 0x64,
	0x65, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x7a, 0x65,
	0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x69, 0x7a,
	0x65, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x74,
	0x6f, 0x64, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x5f,
	0x74, 0x6f, 0x64, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x64, 0x6f,
	0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x5f,
	0x64, 0x6f, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x74, 0x6f,
	0x64, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x5f,
	0x74, 0x6f, 0x64, 0x6f, 0x12, 0x3c, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x22, 0xc0, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x09, 0x0a, 0x05, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e,
	0x49, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x49, 0x4e, 0x49, 0x54, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x50,
	0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x04,
	0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x44, 0x4f, 0x4e, 0x45,
	0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x45, 0x44, 0x10, 0x10, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x5f, 0x44,
	0x4f, 0x4e, 0x45, 0x10, 0x20, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x41, 0x53, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x40, 0x12, 0x0c, 0x0a, 0x07, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10,
	0x80, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x5f, 0x42, 0x59,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x80, 0x02, 0x12, 0x0b, 0x0a, 0x06, 0x50, 0x41, 0x55, 0x53,
	0x45, 0x44, 0x10, 0x80, 0x04, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2d, 0x69, 0x6f, 0x2f, 0x6e, 0x6f,
	0x64, 0x65, 0x75, 0x6d, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x61, 0x73, 0x6b,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_task_type_proto_rawDescOnce sync.Once
	file_protobuf_task_type_proto_rawDescData = file_protobuf_task_type_proto_rawDesc
)

func file_protobuf_task_type_proto_rawDescGZIP() []byte {
	file_protobuf_task_type_proto_rawDescOnce.Do(func() {
		file_protobuf_task_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_task_type_proto_rawDescData)
	})
	return file_protobuf_task_type_proto_rawDescData
}

var file_protobuf_task_type_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_protobuf_task_type_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_protobuf_task_type_proto_goTypes = []interface{}{
	(Source_Type)(0),              // 0: nodeum.protobuf.Source.Type
	(Task_Type)(0),                // 1: nodeum.protobuf.Task.Type
	(Task_Action)(0),              // 2: nodeum.protobuf.Task.Action
	(Execution_Progress)(0),       // 3: nodeum.protobuf.Execution.Progress
	(*Source)(nil),                // 4: nodeum.protobuf.Source
	(*Task)(nil),                  // 5: nodeum.protobuf.Task
	(*Execution)(nil),             // 6: nodeum.protobuf.Execution
	(*structpb.Struct)(nil),       // 7: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_protobuf_task_type_proto_depIdxs = []int32{
	0,  // 0: nodeum.protobuf.Source.type:type_name -> nodeum.protobuf.Source.Type
	1,  // 1: nodeum.protobuf.Task.type:type_name -> nodeum.protobuf.Task.Type
	2,  // 2: nodeum.protobuf.Task.action:type_name -> nodeum.protobuf.Task.Action
	4,  // 3: nodeum.protobuf.Task.sources:type_name -> nodeum.protobuf.Source
	4,  // 4: nodeum.protobuf.Task.destinations:type_name -> nodeum.protobuf.Source
	7,  // 5: nodeum.protobuf.Task.options:type_name -> google.protobuf.Struct
	7,  // 6: nodeum.protobuf.Task.metadata:type_name -> google.protobuf.Struct
	6,  // 7: nodeum.protobuf.Task.last_execution:type_name -> nodeum.protobuf.Execution
	5,  // 8: nodeum.protobuf.Execution.task:type_name -> nodeum.protobuf.Task
	7,  // 9: nodeum.protobuf.Execution.metadata:type_name -> google.protobuf.Struct
	8,  // 10: nodeum.protobuf.Execution.finished_at:type_name -> google.protobuf.Timestamp
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_protobuf_task_type_proto_init() }
func file_protobuf_task_type_proto_init() {
	if File_protobuf_task_type_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobuf_task_type_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_task_type_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_task_type_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Execution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_task_type_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protobuf_task_type_proto_goTypes,
		DependencyIndexes: file_protobuf_task_type_proto_depIdxs,
		EnumInfos:         file_protobuf_task_type_proto_enumTypes,
		MessageInfos:      file_protobuf_task_type_proto_msgTypes,
	}.Build()
	File_protobuf_task_type_proto = out.File
	file_protobuf_task_type_proto_rawDesc = nil
	file_protobuf_task_type_proto_goTypes = nil
	file_protobuf_task_type_proto_depIdxs = nil
}
