// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: nodeum/micro/v1/mover.proto

package microv1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// MoverServiceClient is the client API for MoverService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MoverServiceClient interface {
	Start(ctx context.Context, in *MoverServiceStartRequest, opts ...grpc.CallOption) (*MoverServiceStartResponse, error)
}

type moverServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMoverServiceClient(cc grpc.ClientConnInterface) MoverServiceClient {
	return &moverServiceClient{cc}
}

func (c *moverServiceClient) Start(ctx context.Context, in *MoverServiceStartRequest, opts ...grpc.CallOption) (*MoverServiceStartResponse, error) {
	out := new(MoverServiceStartResponse)
	err := c.cc.Invoke(ctx, "/nodeum.micro.v1.MoverService/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MoverServiceServer is the server API for MoverService service.
// All implementations must embed UnimplementedMoverServiceServer
// for forward compatibility
type MoverServiceServer interface {
	Start(context.Context, *MoverServiceStartRequest) (*MoverServiceStartResponse, error)
	mustEmbedUnimplementedMoverServiceServer()
}

// UnimplementedMoverServiceServer must be embedded to have forward compatible implementations.
type UnimplementedMoverServiceServer struct {
}

func (UnimplementedMoverServiceServer) Start(context.Context, *MoverServiceStartRequest) (*MoverServiceStartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Start not implemented")
}
func (UnimplementedMoverServiceServer) mustEmbedUnimplementedMoverServiceServer() {}

// UnsafeMoverServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MoverServiceServer will
// result in compilation errors.
type UnsafeMoverServiceServer interface {
	mustEmbedUnimplementedMoverServiceServer()
}

func RegisterMoverServiceServer(s grpc.ServiceRegistrar, srv MoverServiceServer) {
	s.RegisterService(&MoverService_ServiceDesc, srv)
}

func _MoverService_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoverServiceStartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoverServiceServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeum.micro.v1.MoverService/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoverServiceServer).Start(ctx, req.(*MoverServiceStartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// MoverService_ServiceDesc is the grpc.ServiceDesc for MoverService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MoverService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "nodeum.micro.v1.MoverService",
	HandlerType: (*MoverServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Start",
			Handler:    _MoverService_Start_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nodeum/micro/v1/mover.proto",
}
